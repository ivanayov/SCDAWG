/cocoa$
findLabelPosInEdgeList 99
edgeIndex: 2
bottom + edgeIndex: 2
dest: 2
Label: -1 , -1
findLabelPosInEdgeList 111
edgeIndex: 14
bottom + edgeIndex: 14
dest: 2
Label: -2 , -2
findLabelPosInEdgeList 99
edgeIndex: 2
bottom + edgeIndex: 2
findLabelPosInEdgeList 111
edgeIndex: 14
bottom + edgeIndex: 14
findLabelPosInEdgeList 97
edgeIndex: 0
bottom + edgeIndex: 0
dest: 2
Label: -5 , -5
suffixLinks[root] 0
vertexes[bottom] -1
vertexes[root] 0
vertexes[sink] 0
sk_pair 2, 1
Before update:
s = 2ki_pair = (1,1)
----------------------- Update:
c = c , oldr = -1 , kp_1_pair = (1,0)
----------------------- check_end_point:
findLetterPosInEdgeList 99
0
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 99
In while ...
kp_pair[0] <= kp_pair[1]-1 : 1 , 0
Case else:
rVertex = 2
findLabelPosInEdgeList 99
edgeIndex = 2
rVertex + edgeIndex = 62
new edge: label: 1 , 1 dest: 1
Add open edge: 62
----------------------- Canonize ...
(Res): sk_pair = (0,1)
sk_pair = (0 , 1)
------------------------------------ End of While ------------------------------------
----------------------- check_end_point:
findLetterPosInEdgeList 99
1
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 99
---------------- separateNode: ...
----------------------- Canonize ...
findLabelPosInEdgeList 99
edgeIndex = 2, kprim = -1, pprim = -1, sp = 2
 in canonize while ...
pprim -1, kprim -1, kp_pair[1] 1, k 2
(Res): sk_pair = (2,2)
----------------------- Canonize -----------------------
(Res): sk_pair_can = (2,2)
---------------- separateNode ------------------
openEdges[j] 62
Before update:
s = 2ki_pair = (2,2)
----------------------- Update:
c = o , oldr = -1 , kp_1_pair = (2,1)
----------------------- check_end_point:
findLetterPosInEdgeList 111
0
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 111
In while ...
kp_pair[0] <= kp_pair[1]-1 : 2 , 1
Case else:
rVertex = 2
findLabelPosInEdgeList 111
edgeIndex = 14
rVertex + edgeIndex = 74
new edge: label: 2 , 2 dest: 1
Add open edge: 74
----------------------- Canonize ...
(Res): sk_pair = (0,2)
sk_pair = (0 , 2)
------------------------------------ End of While ------------------------------------
----------------------- check_end_point:
findLetterPosInEdgeList 111
1
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 111
---------------- separateNode: ...
----------------------- Canonize ...
findLabelPosInEdgeList 111
edgeIndex = 14, kprim = -2, pprim = -2, sp = 2
 in canonize while ...
pprim -2, kprim -2, kp_pair[1] 2, k 3
(Res): sk_pair = (2,3)
----------------------- Canonize -----------------------
(Res): sk_pair_can = (2,3)
---------------- separateNode ------------------
openEdges[j] 62
openEdges[j] 74
Before update:
s = 2ki_pair = (3,3)
----------------------- Update:
c = c , oldr = -1 , kp_1_pair = (3,2)
----------------------- check_end_point:
findLetterPosInEdgeList 99
1
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 99
---------------- separateNode: ...
----------------------- Canonize ...
findLabelPosInEdgeList 99
edgeIndex = 2, kprim = 1, pprim = 3, sp = 1
(Res): sk_pair = (2,3)
----------------------- Canonize -----------------------
(Res): sk_pair_can = (2,3)
---------------- separateNode ------------------
openEdges[j] 62
openEdges[j] 74
Before update:
s = 2ki_pair = (3,4)
----------------------- Update:
c = o , oldr = -1 , kp_1_pair = (3,3)
----------------------- check_end_point:
findLabelPosInEdgeList 99
1
---------------- separateNode: ...
----------------------- Canonize ...
findLabelPosInEdgeList 99
edgeIndex = 2, kprim = 1, pprim = 4, sp = 1
(Res): sk_pair = (2,3)
----------------------- Canonize -----------------------
(Res): sk_pair_can = (2,3)
---------------- separateNode ------------------
openEdges[j] 62
openEdges[j] 74
Before update:
s = 2ki_pair = (3,5)
----------------------- Update:
c = a , oldr = -1 , kp_1_pair = (3,4)
----------------------- check_end_point:
findLabelPosInEdgeList 99
0
In while ...
kp_pair[0] <= kp_pair[1]-1 : 3 , 4
Case kp_pair[0] <= kp_pair[1]-1
---------------- extension: ...
s = 2 , kp_pair = (3,4)
findLabelPosInEdgeList 99
Res: edges[sVertex * alphabetSize + edgeIndex] = 1
---------------- extension ------------------
---------------- split_edge: ...
findLabelPosInEdgeList 99
Remove open edge: 0
(split) redirected edge: source: 2, label: 1 , 2 dest: 3
findLabelPosInEdgeList 99
Add open edge: 92
(split) new edge: source: 3, label: 3 , 5 dest: 1
Res: rVertex = 3
---------------- split_edge ------------------
rVertex = 3
findLabelPosInEdgeList 97
edgeIndex = 0
rVertex + edgeIndex = 90
new edge: label: 5 , 5 dest: 1
Add open edge: 90
----------------------- Canonize ...
findLabelPosInEdgeList 99
edgeIndex = 2, kprim = -1, pprim = -1, sp = 2
 in canonize while ...
pprim -1, kprim -1, kp_pair[1] 4, k 4
findLabelPosInEdgeList 111
(Res): sk_pair = (2,4)
----------------------- Canonize -----------------------
sk_pair = (2 , 4)
------------------------------------ End of While ------------------------------------
----------------------- check_end_point:
findLabelPosInEdgeList 111
0
In while ...
kp_pair[0] <= kp_pair[1]-1 : 3 , 4
Case kp_pair[0] <= kp_pair[1]-1
---------------- extension: ...
s = 2 , kp_pair = (4,4)
findLabelPosInEdgeList 111
Res: edges[sVertex * alphabetSize + edgeIndex] = 1
---------------- extension ------------------
---------------- redirectEdge: ...
s = 2 , kp_pair = (4,4) , r = 3
findLabelPosInEdgeList 111
findLabelPosInEdgeList 111
Remove open edge: 0
redirected edge: source: 2, label: 2 , 2 dest: 3
---------------- redirectEdge ------------------
----------------------- Canonize ...
findLabelPosInEdgeList 111
edgeIndex = 14, kprim = -2, pprim = -2, sp = 2
 in canonize while ...
pprim -2, kprim -2, kp_pair[1] 4, k 5
(Res): sk_pair = (2,5)
----------------------- Canonize -----------------------
kp_1_pair = (5,4)
----------------------- check_end_point:
findLetterPosInEdgeList 97
0
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 97
In while ...
kp_pair[0] <= kp_pair[1]-1 : 5 , 4
Case else:
rVertex = 2
findLabelPosInEdgeList 97
edgeIndex = 0
rVertex + edgeIndex = 60
new edge: label: 5 , 5 dest: 1
Add open edge: 60
suffixLinks[oldr] = 2
----------------------- Canonize ...
(Res): sk_pair = (0,5)
sk_pair = (0 , 5)
------------------------------------ End of While ------------------------------------
----------------------- check_end_point:
findLetterPosInEdgeList 97
1
-----------------------check_end_point-----------------------
findLetterPosInEdgeList 97
---------------- separateNode: ...
----------------------- Canonize ...
findLabelPosInEdgeList 97
edgeIndex = 0, kprim = -5, pprim = -5, sp = 2
 in canonize while ...
pprim -5, kprim -5, kp_pair[1] 5, k 6
(Res): sk_pair = (2,6)
----------------------- Canonize -----------------------
(Res): sk_pair_can = (2,6)
---------------- separateNode ------------------
Before update:
s = 2ki_pair = (6,6)
----------------------- Update:
End of text in update!
vertex: 0 / suffix: -1 / length: -1
label: -5:-5 / destination: 2
label: -1:-1 / destination: 2
label: -2:-2 / destination: 2
vertex: 1 / suffix: -1 / length: 5
vertex: 2 / suffix: 0 / length: 0
label: 5:5 / destination: 1
label: 1:2 / destination: 3
label: 2:2 / destination: 3
vertex: 3 / suffix: 2 / length: 2
label: 5:5 / destination: 1
label: 3:5 / destination: 1
